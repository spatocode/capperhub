# Generated by Django 4.1 on 2023-02-22 13:58

import core.shared.model_utils
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Please enter a valid 3-letter currency code', regex='[A-Z]{3}')])),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='P2PSportsBet',
            fields=[
                ('id', models.CharField(default=core.shared.model_utils.generate_wager_id, editable=False, max_length=6, primary_key=True, serialize=False)),
                ('market', models.CharField(max_length=50)),
                ('placed_time', models.DateTimeField(auto_now_add=True)),
                ('matched_time', models.DateTimeField()),
                ('backer_option', models.BooleanField(null=True)),
                ('layer_option', models.BooleanField(null=True)),
                ('stake_per_bettor', models.FloatField()),
                ('matched', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'VOID'), (1, 'SETTLED'), (2, 'PENDING')], default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0)),
                ('percentage_discount', models.DecimalField(decimal_places=10, default=0.0, max_digits=19)),
                ('date', models.DateTimeField(auto_now=True)),
                ('free_features', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
                ('premium_features', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='SportsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('league', models.CharField(max_length=100)),
                ('home', models.CharField(max_length=100)),
                ('away', models.CharField(max_length=100)),
                ('match_day', models.DateTimeField()),
                ('result', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=0.0)),
                ('withheld', models.FloatField(default=0.0)),
                ('bank', models.CharField(max_length=40)),
                ('account_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=50, null=True)),
                ('bio', models.TextField(null=True)),
                ('country', django_countries.fields.CountryField(max_length=2, null=True)),
                ('phone_number', models.CharField(max_length=22, null=True, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
                ('pricing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.pricing')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='wallet_owner', to='core.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(choices=[(0, 'DEPOSIT'), (1, 'WITHDRAWAL'), (2, 'BET')], editable=False)),
                ('amount', models.IntegerField(default=0, editable=False)),
                ('balance', models.IntegerField(default=0, editable=False)),
                ('reference', models.CharField(default=core.shared.model_utils.generate_reference_code, editable=False, max_length=32)),
                ('payment_issuer', models.PositiveIntegerField(choices=[(0, 'PAYSTACK')], editable=False, null=True)),
                ('channel', models.CharField(editable=False, max_length=100, null=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'FAILED'), (1, 'SUCCEED'), (2, 'PENDING')], editable=False)),
                ('time', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='currency_transaction', to='core.currency')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='user_transactions', to='core.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(choices=[(0, 'FREE'), (1, 'PREMIUM')])),
                ('period', models.IntegerField(default=-1)),
                ('subscription_date', models.DateTimeField(auto_now=True)),
                ('expiration_date', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issuer_subscriptions', to='core.useraccount')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriber_subscriptions', to='core.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='Play',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.CharField(max_length=20)),
                ('league', models.CharField(max_length=50)),
                ('home_team', models.CharField(max_length=50)),
                ('away_team', models.CharField(max_length=50)),
                ('prediction', models.CharField(max_length=50)),
                ('match_day', models.DateTimeField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('result', models.CharField(max_length=10, null=True)),
                ('is_premium', models.BooleanField(default=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'LOSS'), (1, 'WIN'), (2, 'PENDING')], default=2)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='P2PSportsBetInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_initialized', models.DateTimeField(auto_now_add=True)),
                ('bet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.p2psportsbet')),
                ('requestee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestee_request', to='core.useraccount')),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestor_request', to='core.useraccount')),
            ],
        ),
        migrations.AddField(
            model_name='p2psportsbet',
            name='backer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backer_bet', to='core.useraccount'),
        ),
        migrations.AddField(
            model_name='p2psportsbet',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.currency'),
        ),
        migrations.AddField(
            model_name='p2psportsbet',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sportsevent'),
        ),
        migrations.AddField(
            model_name='p2psportsbet',
            name='layer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layer_bet', to='core.useraccount'),
        ),
        migrations.AddField(
            model_name='p2psportsbet',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.useraccount'),
        ),
    ]
