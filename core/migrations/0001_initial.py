# Generated by Django 4.1 on 2023-09-26 11:37

import core.models.games
import core.models.user
import core.shared.model_utils
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Please enter a valid 3-letter currency code', regex='[A-Z]{3}')])),
                ('country', django_countries.fields.CountryField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField(max_length=10000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sports', models.CharField(max_length=20)),
                ('competition', models.CharField(max_length=50)),
                ('home_team', models.CharField(max_length=50)),
                ('away_team', models.CharField(max_length=50)),
                ('match_day', models.DateTimeField()),
                ('result', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('percentage_discount', models.DecimalField(decimal_places=10, default=0.0, max_digits=19)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('free_features', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=core.models.user.default_free_features, size=7)),
                ('premium_features', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=core.models.user.default_premium_features, size=7)),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=100000)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SportsGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.CharField(max_length=100)),
                ('home', models.CharField(max_length=100)),
                ('away', models.CharField(max_length=100)),
                ('match_day', models.DateTimeField()),
                ('result', models.CharField(blank=True, default='', max_length=10)),
                ('time_added', models.DateTimeField(auto_now_add=True)),
                ('markets', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=core.models.games.default_markets, size=None)),
                ('is_wager_played', models.BooleanField(default=False)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sports_game', to='core.sport')),
            ],
        ),
        migrations.CreateModel(
            name='SportsWager',
            fields=[
                ('id', models.CharField(default=core.shared.model_utils.generate_wager_id, editable=False, max_length=10, primary_key=True, serialize=False)),
                ('market', models.CharField(max_length=50)),
                ('placed_time', models.DateTimeField(auto_now_add=True)),
                ('matched_time', models.DateTimeField(null=True)),
                ('backer_option', models.BooleanField()),
                ('layer_option', models.BooleanField(null=True)),
                ('stake', models.FloatField()),
                ('matched', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'VOID'), (1, 'SETTLED'), (2, 'PENDING')], default=2)),
            ],
        ),
        migrations.CreateModel(
            name='TermsOfUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=100000)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Waitlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=0.0)),
                ('withheld', models.FloatField(default=0.0)),
                ('bank_code', models.CharField(blank=True, default='', max_length=10)),
                ('bank_account_number', models.CharField(blank=True, default='', max_length=50)),
                ('authorizations', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(), blank=True, default=list, size=5)),
                ('meta', models.JSONField(default=core.models.user.meta_default)),
                ('receipent_code', models.CharField(blank=True, default='', max_length=50)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.currency')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(default='', max_length=50)),
                ('bio', models.TextField(default='')),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('country', django_countries.fields.CountryField(blank=True, default='', max_length=2)),
                ('phone_number', models.CharField(default='', max_length=22)),
                ('twitter_handle', models.CharField(blank=True, default='', max_length=22)),
                ('facebook_handle', models.CharField(blank=True, default='', max_length=22)),
                ('instagram_handle', models.CharField(blank=True, default='', max_length=22)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('pricing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.pricing')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wallet_owner', to='core.wallet')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(choices=[(0, 'DEPOSIT'), (1, 'WITHDRAWAL'), (2, 'WAGER'), (3, 'PURCHASE')], editable=False)),
                ('amount', models.IntegerField(default=0, editable=False)),
                ('reference', models.CharField(default=core.shared.model_utils.generate_reference_code, editable=False, max_length=32)),
                ('status', models.PositiveIntegerField(choices=[(0, 'FAILED'), (1, 'SUCCEED'), (2, 'PENDING')], editable=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='currency_transaction', to='core.currency')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='user_transactions', to='core.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('competition', models.ManyToManyField(to='core.competition')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(choices=[(0, 'FREE'), (1, 'PREMIUM')])),
                ('period', models.IntegerField(default=-1)),
                ('subscription_date', models.DateTimeField(auto_now=True)),
                ('expiration_date', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='issuer_subscriptions', to='core.useraccount')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriber_subscriptions', to='core.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='SportsWagerChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_initialized', models.DateTimeField(auto_now_add=True)),
                ('accepted', models.BooleanField(default=False)),
                ('requestee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requestee_request', to='core.useraccount')),
                ('requestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestor_request', to='core.useraccount')),
                ('wager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitation', to='core.sportswager')),
            ],
        ),
        migrations.AddField(
            model_name='sportswager',
            name='backer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backer_wager', to='core.useraccount'),
        ),
        migrations.AddField(
            model_name='sportswager',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wagers', to='core.sportsgame'),
        ),
        migrations.AddField(
            model_name='sportswager',
            name='layer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='layer_wager', to='core.useraccount'),
        ),
        migrations.AddField(
            model_name='sportswager',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.transaction'),
        ),
        migrations.AddField(
            model_name='sportswager',
            name='winner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.useraccount'),
        ),
        migrations.CreateModel(
            name='PlaySlip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.useraccount')),
            ],
        ),
        migrations.CreateModel(
            name='Play',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction', models.CharField(max_length=50)),
                ('status', models.PositiveIntegerField(choices=[(0, 'LOSS'), (1, 'WIN'), (2, 'PENDING')], default=2)),
                ('match', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.match')),
                ('slip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.playslip')),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sport')),
            ],
        ),
        migrations.AddField(
            model_name='competition',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sport'),
        ),
    ]
